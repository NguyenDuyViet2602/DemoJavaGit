/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

import javax.swing.table.DefaultTableModel;
import Controller.SanPhamController;
import java.sql.SQLException;
import java.util.List;
import Model.SanPham;
import java.math.BigDecimal;
import javax.swing.JOptionPane;

/**
 *
 * @author Manh
 */
public class frmSanPham extends javax.swing.JPanel {

    private boolean cothem = true;
    private final SanPhamController sanPhamController = new SanPhamController();
    private final DefaultTableModel tableModel = new DefaultTableModel();

    /**
     * Creates new form Customer
     */
    public frmSanPham() throws SQLException {
        initComponents(); // Khởi tạo các thành phần giao diện (thường do NetBeans tạo ra)

        String[] colsName = {"Id", "Tên sản phẩm", "Giá", "Mô tả", "Số lượng"}; // Đặt tên các cột cho bảng
        tableModel.setColumnIdentifiers(colsName); // Cập nhật tiêu đề cột cho tableModel

        tblSanPham.setModel(tableModel); // Kết nối JTable với tableModel

        hienThiDuLieu(); // Gọi phương thức hiển thị dữ liệu vào bảng
        setNull(); // Xóa trắng các JTextField sau khi tải dữ liệu vào bảng

        setKhoa(true); // Khóa các TextField để ngừng chỉnh sửa khi chưa thao tác xong
        setButton(true); // Vô hiệu hóa các nút Lưu và Hủy, mở khóa các nút khác (nếu có)

    }

    public void hienThiDuLieu() {
        // Lấy danh sách sản phẩm từ cơ sở dữ liệu
        List<SanPham> danhSachSanPham;
        try {
            danhSachSanPham = sanPhamController.getTatCaSanPham();

            // Xóa dữ liệu cũ trong tableModel trước khi thêm dữ liệu mới
            tableModel.setRowCount(0);

            // Duyệt qua từng sản phẩm và thêm vào tableModel
            for (SanPham sanPham : danhSachSanPham) {
                Object[] row = {
                    sanPham.getSanPhamId(),
                    sanPham.getTenSanPham(),
                    sanPham.getGiaSanPham(),
                    sanPham.getSoluongton(),
                    sanPham.getMoTaSanPham()
                };
                tableModel.addRow(row); // Thêm dòng dữ liệu vào tableModel
            }
        } catch (SQLException e) {
            // Xử lý lỗi nếu có
            JOptionPane.showMessageDialog(null, "Lỗi khi hiển thị dữ liệu sản phẩm: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            // Xử lý lỗi chung khác
            JOptionPane.showMessageDialog(null, "Có lỗi xảy ra: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        btnTimKiem = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtTenSanPham = new javax.swing.JTextField();
        txtGiaSanPham = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSoLuongTon = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtMoTaSanPham = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        btnThemSanPham = new javax.swing.JButton();
        btnSuaSanPham = new javax.swing.JButton();
        btnLuuSanPham = new javax.swing.JButton();
        btnXoaSanPham = new javax.swing.JButton();
        btnHuySanPham = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        tblSanPham.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray, java.awt.Color.gray));
        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Tên sản phẩm", "Giá bán", "Số lượng", "Mô tả"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8666693_search_icon.png"))); // NOI18N
        btnTimKiem.setBorder(null);
        btnTimKiem.setBorderPainted(false);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 750, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTimKiem)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(118, 118, 118))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("Sản phẩm:");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Giá bán:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Số lượng:");

        txtMoTaSanPham.setColumns(20);
        txtMoTaSanPham.setRows(5);
        jScrollPane2.setViewportView(txtMoTaSanPham);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Mô tả:");

        btnThemSanPham.setBackground(new java.awt.Color(0, 255, 51));
        btnThemSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnThemSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8666718_plus_circle_icon.png"))); // NOI18N
        btnThemSanPham.setText("Thêm");
        btnThemSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemSanPhamActionPerformed(evt);
            }
        });

        btnSuaSanPham.setBackground(new java.awt.Color(255, 255, 102));
        btnSuaSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnSuaSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8666806_edit_write_pen_icon (1).png"))); // NOI18N
        btnSuaSanPham.setText("Sửa");
        btnSuaSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaSanPhamActionPerformed(evt);
            }
        });

        btnLuuSanPham.setBackground(new java.awt.Color(153, 255, 255));
        btnLuuSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLuuSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8666778_download_down_save_icon.png"))); // NOI18N
        btnLuuSanPham.setText("Lưu");
        btnLuuSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuSanPhamActionPerformed(evt);
            }
        });

        btnXoaSanPham.setBackground(new java.awt.Color(255, 0, 0));
        btnXoaSanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnXoaSanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8666597_trash_2_icon.png"))); // NOI18N
        btnXoaSanPham.setText("Xóa");
        btnXoaSanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaSanPhamActionPerformed(evt);
            }
        });

        btnHuySanPham.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHuySanPham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/8666728_refresh_cw_icon.png"))); // NOI18N
        btnHuySanPham.setText("K.Lưu");
        btnHuySanPham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuySanPhamActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 301, Short.MAX_VALUE)
                    .addComponent(txtGiaSanPham, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTenSanPham, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSoLuongTon, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnThemSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLuuSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSuaSanPham, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHuySanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnThemSanPham)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSuaSanPham))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtTenSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtGiaSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSoLuongTon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btnXoaSanPham)
                        .addGap(12, 12, 12)
                        .addComponent(btnLuuSanPham)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnHuySanPham)))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemSanPhamActionPerformed
        setNull();//Xoa trang TextField
        setKhoa(false);//Mo khoa TextField
        setButton(false);//Goi ham khoa cac Button
        cothem = true;//Gan cothem = true de ghi nhan trang thai them moi
    }//GEN-LAST:event_btnThemSanPhamActionPerformed

    private void btnLuuSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuSanPhamActionPerformed
        String tenSanPham = txtTenSanPham.getText();
        String giaSanPhamText = txtGiaSanPham.getText();
        String moTaSanPham = txtMoTaSanPham.getText();
        String soLuongTonText = txtSoLuongTon.getText(); // Lấy giá trị số lượng tồn

// Kiểm tra thông tin nhập vào
        if (tenSanPham.isEmpty() || moTaSanPham.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập đầy đủ thông tin", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (giaSanPhamText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập giá sản phẩm", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (soLuongTonText.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập số lượng tồn", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            // Kiểm tra và chuyển giá sản phẩm thành BigDecimal
            BigDecimal giaSanPham;
            try {
                giaSanPham = new BigDecimal(giaSanPhamText);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Giá sản phẩm không hợp lệ", "Thông báo", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Kiểm tra và chuyển số lượng tồn thành int
            int soLuongTon;
            try {
                soLuongTon = Integer.parseInt(soLuongTonText); // Chuyển đổi thành int
                if (soLuongTon < 0) {
                    throw new NumberFormatException("Số lượng tồn không thể âm");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Số lượng tồn không hợp lệ", "Thông báo", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Tạo đối tượng SanPham và thiết lập thông tin
            SanPham sanPham = new SanPham();
            sanPham.setTenSanPham(tenSanPham);
            sanPham.setGiaSanPham(giaSanPham);
            sanPham.setSoluongton(soLuongTon); // Thiết lập số lượng tồn
            sanPham.setMoTaSanPham(moTaSanPham);

            // Nếu không phải thêm mới (sửa sản phẩm)
            if (!cothem) {
                int row = tblSanPham.getSelectedRow(); // Lấy hàng đã chọn
                int id = Integer.parseInt(tblSanPham.getModel().getValueAt(row, 0).toString()); // Lấy ID từ bảng
                sanPham.setSanPhamId(id); // Thiết lập ID cho đối tượng
            }

            // Thực hiện thêm hoặc sửa sản phẩm
            if (cothem) {
                sanPhamController.themSanPham(sanPham); // Thêm mới sản phẩm
                JOptionPane.showMessageDialog(null, "Thêm sản phẩm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            } else {
                sanPhamController.suaSanPham(sanPham); // Sửa sản phẩm
                JOptionPane.showMessageDialog(null, "Sửa sản phẩm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }

            // Cập nhật lại dữ liệu hiển thị
            xoaDuLieu(); // Xóa dữ liệu trong tableModel
            hienThiDuLieu(); // Đưa lại dữ liệu vào Table Model

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Cập nhật thất bại: " + ex.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Có lỗi xảy ra: " + ex.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

// Khóa các trường và bật lại các nút
        setKhoa(true); // Khóa các trường nhập liệu
        setButton(true); // Vô hiệu hóa các nút Lưu và Hủy


    }//GEN-LAST:event_btnLuuSanPhamActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        try {
            int row = this.tblSanPham.getSelectedRow();

            // Kiểm tra nếu không có dòng nào được chọn
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm cần sửa", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            int id = Integer.parseInt(this.tblSanPham.getModel().getValueAt(row, 0).toString());
            SanPham sanPham = sanPhamController.getSanPhamById(id);

            // Kiểm tra nếu không tìm thấy sản phẩm
            if (sanPham != null) {
                txtTenSanPham.setText(sanPham.getTenSanPham());
                txtGiaSanPham.setText(sanPham.getGiaSanPham().toString());

                // Kiểm tra kiểu dữ liệu của số lượng tồn và chuyển đổi nếu cần
                txtSoLuongTon.setText(String.valueOf(sanPham.getSoluongton())); // Nếu getSoluongton() trả về kiểu int hoặc chuỗi

                txtMoTaSanPham.setText(sanPham.getMoTaSanPham());

                setKhoa(false); // Mở khóa các TextField
                setButton(true); // Mở các nút Lưu và Hủy, vô hiệu các nút Thêm, Sửa, Xóa
                btnLuuSanPham.setEnabled(false); // Vô hiệu hóa nút Lưu trong chế độ sửa
                btnHuySanPham.setEnabled(true); // Kích hoạt nút Hủy
            } else {
                JOptionPane.showMessageDialog(null, "Không tìm thấy sản phẩm với ID " + id, "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        } catch (SQLException e) {
            // Xử lý lỗi SQL
            JOptionPane.showMessageDialog(null, "Lỗi khi tải thông tin sản phẩm: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            // Xử lý lỗi chung
            JOptionPane.showMessageDialog(null, "Có lỗi xảy ra: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnSuaSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaSanPhamActionPerformed
        String tenSanPham = txtTenSanPham.getText();
        if (tenSanPham.length() == 0) //Chua chon Ma loai
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm cần sửa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        else {
            setKhoa(false);//Mo khoa cac TextField
            setButton(false); //Khoa cac Button
            cothem = false; //Gan cothem=false de ghi nhan trang thai la sua
        }
    }//GEN-LAST:event_btnSuaSanPhamActionPerformed

    private void btnXoaSanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaSanPhamActionPerformed
        try {
            // Lấy dòng đã chọn trong bảng
            int row = this.tblSanPham.getSelectedRow();

            // Kiểm tra nếu không có dòng nào được chọn
            if (row == -1) {
                JOptionPane.showMessageDialog(null, "Vui lòng chọn một sản phẩm để xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Lấy ID sản phẩm từ bảng
            int id = Integer.parseInt(this.tblSanPham.getModel().getValueAt(row, 0).toString());

            // Kiểm tra nếu ID không hợp lệ
            if (id == 0) {
                JOptionPane.showMessageDialog(null, "ID sản phẩm không hợp lệ", "Thông báo", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Xác nhận xóa sản phẩm
            int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa sản phẩm " + id + " này không?", "Thông báo", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                // Gọi phương thức xóa sản phẩm
                sanPhamController.xoaSanPham(id);

                // Cập nhật lại dữ liệu bảng
                xoaDuLieu(); // Xóa dữ liệu trong tableModel
                hienThiDuLieu(); // Đưa dữ liệu vào tableModel

                // Xóa trắng các trường nhập liệu
                setNull();

                // Thông báo xóa thành công
                JOptionPane.showMessageDialog(null, "Sản phẩm đã được xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            // Xử lý lỗi SQL khi xóa
            JOptionPane.showMessageDialog(null, "Xóa thất bại: " + ex.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            // Xử lý lỗi chung
            JOptionPane.showMessageDialog(null, "Có lỗi xảy ra: " + ex.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnXoaSanPhamActionPerformed

    private void btnHuySanPhamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuySanPhamActionPerformed
        setNull();
        setKhoa(true);
        setButton(true);
    }//GEN-LAST:event_btnHuySanPhamActionPerformed

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed
        String tenSanPham = txtTimKiem.getText().trim(); // Lấy giá trị tìm kiếm từ JTextField

        if (tenSanPham.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập tên sản phẩm để tìm kiếm", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        try {
            List<SanPham> danhSachSanPham = sanPhamController.timKiemSanPham(tenSanPham); // Gọi phương thức tìm kiếm

            // Xóa dữ liệu cũ trong tableModel trước khi thêm dữ liệu mới
            xoaDuLieu();

            // Duyệt qua từng sản phẩm và thêm vào tableModel
            for (SanPham sanPham : danhSachSanPham) {
                Object[] row = {
                    sanPham.getSanPhamId(),
                    sanPham.getTenSanPham(),
                    sanPham.getGiaSanPham(),
                    sanPham.getSoluongton(),
                    sanPham.getMoTaSanPham()
                };
                tableModel.addRow(row); // Thêm dòng dữ liệu vào tableModel
            }

            if (danhSachSanPham.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Không tìm thấy sản phẩm nào", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Lỗi khi tìm kiếm sản phẩm: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Có lỗi xảy ra: " + e.getMessage(), "Thông báo", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        String searchText = txtTimKiem.getText().trim(); // Lấy nội dung ô tìm kiếm

        if (searchText.isEmpty()) {
            // Nếu ô tìm kiếm rỗng, hiển thị tất cả sản phẩm
            hienThiDuLieu(); // Gọi phương thức để hiển thị tất cả sản phẩm
        }
    }//GEN-LAST:event_txtTimKiemKeyReleased

    public void xoaDuLieu() throws SQLException {
//Lay chi so dong cuoi cung
        int n = tableModel.getRowCount() - 1;
        for (int i = n; i >= 0; i--) {
            tableModel.removeRow(i);//Remove tung dong
        }
    }

    private void setNull() {
        this.txtTenSanPham.setText(null);
        this.txtGiaSanPham.setText(null);
        this.txtMoTaSanPham.setText(null);
        this.txtSoLuongTon.setText(null);
        this.txtTenSanPham.requestFocus();
    }

    private void setKhoa(boolean a) {
        this.txtTenSanPham.setEnabled(!a);
        this.txtGiaSanPham.setEnabled(!a);
        this.txtMoTaSanPham.setEnabled(!a);
        this.txtSoLuongTon.setEnabled(!a);
    }

    private void setButton(boolean a) {
        this.btnThemSanPham.setEnabled(a);
        this.btnXoaSanPham.setEnabled(a);
        this.btnSuaSanPham.setEnabled(a);
        this.btnLuuSanPham.setEnabled(!a);
        this.btnHuySanPham.setEnabled(!a);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuySanPham;
    private javax.swing.JButton btnLuuSanPham;
    private javax.swing.JButton btnSuaSanPham;
    private javax.swing.JButton btnThemSanPham;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JButton btnXoaSanPham;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtGiaSanPham;
    private javax.swing.JTextArea txtMoTaSanPham;
    private javax.swing.JTextField txtSoLuongTon;
    private javax.swing.JTextField txtTenSanPham;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View.Invoice;

import Controller.HoaDonController;
import Model.HoaDon;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Manh
 */
public class LuuTruHoaDon extends javax.swing.JPanel {

    /**
     * Creates new form LuuTruHoaDon
     */
    private final HoaDonController iv = new HoaDonController();
    private final DefaultTableModel tableModel = new DefaultTableModel();
    public LuuTruHoaDon() throws SQLException {
        initComponents();
        String[] colsName = {"Id", "Mã Số Hóa Đơn", "Tên Khách Hàng", "Tổng Tiền", "Tiền Thuế", "Ngày Lập Hóa Đơn", "Hạn Thanh Toán", "Trạng Thái"}; // Đặt tiêu đề cột cho tableModel        
        tableModel.setColumnIdentifiers(colsName);
        tblHoaDon.setModel(tableModel); // Kết nối jtable với tableModel
        hienThiDuLieu();
    }
public void hienThiDuLieu() throws SQLException {
        // Lấy danh sách hóa đơn từ cơ sở dữ liệu
        List<HoaDon> danhSach = iv.getTatCaHoaDon();
        try {
            // Xóa dữ liệu cũ trước khi thêm mới
            tableModel.setRowCount(0);

            // Duyệt qua từng dòng của danh sách
            for (HoaDon item : danhSach) {
                // Tính tổng tiền cho hóa đơn và lưu vào cơ sở dữ liệu
                BigDecimal tongTien = iv.tinhTongTienHoaDon(item.getHoaDonId());
                item.setTongTien(tongTien);

                // Tính tiền thuế là 10% của tổng tiền
                BigDecimal thueTien = tongTien.multiply(BigDecimal.valueOf(0.1));
                item.setThueTien(thueTien);

                // Tạo một mảng đối tượng cho mỗi dòng
                Object[] rows = {
                    item.getHoaDonId(),
                    item.getSoHoaDon(),
                    item.getKhachHang().getTen(),
                    item.getTongTien(),
                    item.getThueTien(),
                    item.getNgayLapHoaDon(),
                    item.getNgayHanThanhToan(),
                    item.getTrangThai()
                };
                // Thêm dòng dữ liệu vào tableModel
                tableModel.addRow(rows);
            }
        } catch (Exception e) {
            // Xử lý các lỗi khác
            System.err.println("Đã có lỗi xảy ra: " + e.getMessage());
            e.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        btnHoaDon = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(750, 450));
        setLayout(new java.awt.BorderLayout());

        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setLayout(new java.awt.BorderLayout());

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblHoaDon);

        jPanel1.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        btnHoaDon.setText("Open");
        btnHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHoaDonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(576, Short.MAX_VALUE)
                .addComponent(btnHoaDon)
                .addGap(102, 102, 102))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(btnHoaDon)
                .addGap(33, 33, 33))
        );

        add(jPanel2, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHoaDonActionPerformed
        // Lấy chỉ số hàng được chọn
    int selectedRow = tblHoaDon.getSelectedRow();
    
    // Kiểm tra xem có hàng nào được chọn không
    if (selectedRow >= 0) {
        // Lấy ID hóa đơn từ hàng đã chọn
        int hoaDonId = (int) tableModel.getValueAt(selectedRow, 0); // Giả sử cột 0 là ID hóa đơn
        
        // Lấy hóa đơn từ cơ sở dữ liệu bằng ID
        try {
            HoaDon hoaDon = iv.getHoaDonById(hoaDonId); // Phương thức này cần được định nghĩa trong HoaDonController
            
            // Lấy đường dẫn đến file PDF
            String duongDanPDF = hoaDon.getDuongDanPDF();
            
            // Mở file PDF
            if (duongDanPDF != null && !duongDanPDF.isEmpty()) {
                try {
                    java.awt.Desktop.getDesktop().open(new java.io.File(duongDanPDF));
                } catch (Exception e) {
                    System.err.println("Không thể mở file PDF: " + e.getMessage());
                }
            } else {
                System.out.println("Đường dẫn PDF không hợp lệ.");
            }
        } catch (SQLException e) {
            System.err.println("Lỗi khi lấy hóa đơn: " + e.getMessage());
        }
    } else {
        System.out.println("Vui lòng chọn một hóa đơn để mở.");
    }
    }//GEN-LAST:event_btnHoaDonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHoaDon;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHoaDon;
    // End of variables declaration//GEN-END:variables
}
